name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-code:
    name: code-${{matrix.config.name}}
    runs-on: ${{matrix.config.image}}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: linux-dev-gcc-x64,
            image: ubuntu-24.04,
            os: linux,
            toolchain: unix,
            cc: gcc-14,
            fast: Off,
            simd: On,
            trace: On,
            lto: Off,
            sanitize: On,
          }
        - {
            name: linux-dev-gcc-no-simd-x64,
            image: ubuntu-24.04,
            os: linux,
            toolchain: unix,
            cc: gcc-14,
            fast: Off,
            simd: Off,
            trace: On,
            lto: Off,
            sanitize: On,
          }
        - {
            name: linux-dev-clang-x64,
            image: ubuntu-24.04,
            os: linux,
            toolchain: unix,
            cc: clang-18,
            fast: Off,
            simd: On,
            trace: On,
            lto: Off,
            sanitize: On,
          }
        - {
            name: windows-dev-msvc-x64,
            image: windows-2025,
            os: windows,
            toolchain: msvc,
            cc: cl,
            fast: Off,
            simd: On,
            trace: On,
            lto: Off,
            sanitize: On,
          }
        - {
            name: windows-dev-clang-x64,
            image: windows-2025,
            os: windows,
            toolchain: msvc,
            cc: clang,
            fast: Off,
            simd: On,
            trace: On,
            lto: Off,
            sanitize: On,
          }
        - {
            name: windows-dev-mingw-x64,
            image: windows-2025,
            os: windows,
            toolchain: mingw,
            cc: gcc,
            fast: Off,
            simd: On,
            trace: On,
            lto: Off,
            sanitize: On,
          }
        - {
            name: linux-rel-x64,
            image: ubuntu-24.04,
            os: linux,
            toolchain: unix,
            cc: clang-18,
            fast: On,
            simd: On,
            trace: Off,
            lto: On,
            sanitize: Off,
          }
        - {
            name: windows-rel-x64,
            image: windows-2025,
            os: windows,
            toolchain: msvc,
            cc: clang,
            fast: On,
            simd: On,
            trace: Off,
            lto: On,
            sanitize: Off,
          }
    env:
      CC: ${{matrix.config.cc}}
      CMAKE_OPTS: >-
        -DFAST=${{matrix.config.fast}}
        -DSIMD=${{matrix.config.simd}}
        -DLTO=${{matrix.config.lto}}
        -DTRACE=${{matrix.config.trace}}
        -DSANITIZE=${{matrix.config.sanitize}}
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: build-unix
      if: matrix.config.toolchain == 'unix'
      shell: bash
      run: |
        cmake -B build $CMAKE_OPTS &&
        make -sk -C build all test install

    - name: build-msvc
      if: matrix.config.toolchain == 'msvc'
      shell: pwsh
      run: |
        ./ci/env-win32.ps1                                                &&
        cmake -B build -G 'NMake Makefiles' $($env:CMAKE_OPTS -split ' ') &&
        cd build                                                          &&
        nmake /C /K all test install

    - name: build-mingw
      if: matrix.config.toolchain == 'mingw'
      shell: pwsh
      run: |
        cmake -B build -G 'MinGW Makefiles' $($env:CMAKE_OPTS -split ' ') &&
        mingw32-make -sk -C build all test install

    - name: strip-unix
      if: matrix.config.toolchain == 'unix'
      shell: bash
      run: |
        for file in $(find bin -type f ! -name "*.*"); do
            objcopy --only-keep-debug "$file" "$file.dbg"
            strip --strip-all "$file"
            objcopy --add-gnu-debuglink="$file.dbg" "$file"
        done

    - name: archive
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: archive-code-${{matrix.config.name}}
        path: |
          bin/
          build/**/logs/*.crash
          build/**/logs/*.eventtrace
          build/**/logs/*.log
          build/**/logs/*.mocha

    - name: report
      uses: dorny/test-reporter@v2
      if: ${{ !cancelled() }}
      with:
        name: report-${{matrix.config.name}}
        fail-on-error: false
        path: build/**/logs/*.mocha
        reporter: mocha-json
        only-summary: 'true'
