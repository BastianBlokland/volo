name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.image}}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: linux-gcc,
            image: ubuntu-22.04,
            os: linux,
            toolchain: unix,
            cc: gcc-9,
            fast: Off,
            lto: Off,
          }
        - {
            name: linux-clang,
            image: ubuntu-22.04,
            os: linux,
            toolchain: unix,
            cc: clang-13,
            fast: Off,
            lto: Off,
          }
        - {
            name: windows-msvc,
            image: windows-2022,
            os: windows,
            toolchain: msvc,
            cc: cl,
            fast: Off,
            lto: Off,
          }
        - {
            name: windows-clang,
            image: windows-2022,
            os: windows,
            toolchain: msvc,
            cc: clang,
            fast: Off,
            lto: Off,
          }
        - {
            name: windows-mingw,
            image: windows-2022,
            os: windows,
            toolchain: mingw,
            cc: gcc,
            fast: Off,
            lto: Off,
          }
        - {
            name: linux-clang-release,
            image: ubuntu-22.04,
            os: linux,
            toolchain: unix,
            cc: clang-13,
            fast: On,
            lto: On,
          }
        - {
            name: windows-msvc-release,
            image: windows-2022,
            os: windows,
            toolchain: msvc,
            cc: cl,
            fast: On,
            lto: On,
          }
    env:
      CC: ${{matrix.config.cc}}
      CMAKE_OPTS: "-DSANITIZE=On -DFAST=${{matrix.config.fast}} -DLTO=${{matrix.config.lto}}"
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: test-unix
      if: matrix.config.toolchain == 'unix'
      run: |
        cmake -B build $CMAKE_OPTS  &&
        cd build                    &&
        make -k all test

    - name: test-msvc
      if: matrix.config.toolchain == 'msvc'
      run: |
        ./ci/env-win32.ps1                                                &&
        cmake -B build -G 'NMake Makefiles' $($env:CMAKE_OPTS -split ' ') &&
        cd build                                                          &&
        nmake /C /K all test

    - name: test-mingw
      if: matrix.config.toolchain == 'mingw'
      run: |
        cmake -B build -G 'MinGW Makefiles' $($env:CMAKE_OPTS -split ' ') &&
        cd build                                                          &&
        mingw32-make -k all test

    - name: archive
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: archive-${{matrix.config.name}}
        path: |
          build/**/logs/*.crash
          build/**/logs/*.eventtrace
          build/**/logs/*.log
          build/**/logs/*.mocha

    - name: report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: test-results-${{matrix.config.name}}
        fail-on-error: false
        path: build/**/logs/*.mocha
        reporter: mocha-json
