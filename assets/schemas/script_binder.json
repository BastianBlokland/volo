{
  "functions": [
    {
      "name": "destroy",
      "doc": "Destroy the given entity.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "nav_find",
      "doc": "Find a navigation position.\n\nSupported types:\n\n-`ClosestCell` (default)\n\n-`UnblockedCell`\n\n-`FreeCell`",
      "sig": {
        "ret": [
          "null",
          "vec3"
        ],
        "args": [
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "type",
            "mask": [
              "null",
              "str"
            ]
          }
        ]
      }
    },
    {
      "name": "target_range_max",
      "doc": "Lookup the maximum targeting range of the given entity.",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "debug_line",
      "doc": "Draw a 3D debug line between the two given points.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "start",
            "mask": "vec3"
          },
          {
            "name": "end",
            "mask": "vec3"
          },
          {
            "name": "color",
            "mask": [
              "null",
              "color"
            ]
          }
        ]
      }
    },
    {
      "name": "vfx_system",
      "doc": "Place a vfx system.\n\n*Note*: Resulting entity is not automatically destroyed.\n\n*Note*: It takes one frame before it can be used with the 'vfx_param()' api.",
      "sig": {
        "ret": "entity",
        "args": [
          {
            "name": "asset",
            "mask": "entity"
          },
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "rot",
            "mask": "quat"
          },
          {
            "name": "alpha",
            "mask": [
              "null",
              "num"
            ]
          }
        ]
      }
    },
    {
      "name": "position",
      "doc": "Lookup the position of the given entity.",
      "sig": {
        "ret": [
          "null",
          "vec3"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "target_range_min",
      "doc": "Lookup the minimum targeting range of the given entity.",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "debug_trace",
      "doc": "Emit a debug-trace for this entity with the given values.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "values",
            "mask": "any",
            "multi": true
          }
        ]
      }
    },
    {
      "name": "light_point",
      "doc": "Place a point light.\n\n*Note*: Resulting entity is not automatically destroyed.\n\n*Note*: It takes one frame before it can be used with the 'light_param()' api.",
      "sig": {
        "ret": "entity",
        "args": [
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "radiance",
            "mask": "color"
          },
          {
            "name": "radius",
            "mask": "num"
          }
        ]
      }
    },
    {
      "name": "query_box",
      "doc": "Find all the entities that are touching the given box.\n\n*Note*: Returns a query handle.\n\nSupported layers:\n\n-`Environment`\n\n-`Destructible`\n\n-`Infantry`\n\n-`Structure`\n\n-`Unit`\n\n-`Debug`\n\n-`AllIncludingDebug`\n\n-`AllNonDebug` (default)",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "size",
            "mask": "vec3"
          },
          {
            "name": "rot",
            "mask": [
              "null",
              "quat"
            ]
          },
          {
            "name": "layers",
            "mask": [
              "null",
              "str"
            ],
            "multi": true
          }
        ]
      }
    },
    {
      "name": "name",
      "doc": "Lookup the name of the given entity.",
      "sig": {
        "ret": [
          "null",
          "str"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "query_set",
      "doc": "Find all entities in the given set.\n\n*Note*: Returns a query handle.",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "set",
            "mask": "str"
          }
        ]
      }
    },
    {
      "name": "active",
      "doc": "Test if the given entity is performing an activity.\n\nSupported activities:\n\n-`Moving`\n\n-`Traveling`\n\n-`Attacking`\n\n-`Firing`",
      "sig": {
        "ret": [
          "null",
          "bool"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "activity",
            "mask": "str"
          }
        ]
      }
    },
    {
      "name": "nav_stop",
      "doc": "Instruct the given entity to stop traveling.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "destroy_after",
      "doc": "Destroy the given entity after a delay.\n\n*Note*: When providing an entity it will wait until the entity no longer exists.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "delay",
            "mask": [
              "num",
              "entity"
            ]
          }
        ]
      }
    },
    {
      "name": "health",
      "doc": "Lookup the health points of the given entity.",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "nav_travel",
      "doc": "Instruct the given entity to travel to a target location or entity.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "target",
            "mask": [
              "vec3",
              "entity"
            ]
          }
        ]
      }
    },
    {
      "name": "nav_target",
      "doc": "Lookup the current navigation target of the given entity. Either a position or an entity.",
      "sig": {
        "ret": [
          "null",
          "vec3",
          "entity"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "debug_orientation",
      "doc": "Draw a 3D orientation gizmos.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "rot",
            "mask": "quat"
          },
          {
            "name": "size",
            "mask": [
              "null",
              "num"
            ]
          }
        ]
      }
    },
    {
      "name": "query_pop",
      "doc": "Pops the first query value, returns null when reaching the end of the query.",
      "sig": {
        "ret": [
          "null",
          "entity"
        ],
        "args": [
          {
            "name": "query",
            "mask": "num"
          }
        ]
      }
    },
    {
      "name": "target_primary",
      "doc": "Lookup the primary target of the given entity.",
      "sig": {
        "ret": [
          "null",
          "entity"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "damage",
      "doc": "Deal damage to the given entity.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "amount",
            "mask": "num"
          }
        ]
      }
    },
    {
      "name": "query_random",
      "doc": "Return a random remaining value in the given query, returns null when the current query is empty.",
      "sig": {
        "ret": [
          "null",
          "entity"
        ],
        "args": [
          {
            "name": "query",
            "mask": "num"
          }
        ]
      }
    },
    {
      "name": "scale",
      "doc": "Lookup the scale of the given entity.",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "debug_log",
      "doc": "Log the given values.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "values",
            "mask": "any",
            "multi": true
          }
        ]
      }
    },
    {
      "name": "random_of",
      "doc": "Return a random (non-null) value from the given arguments.",
      "sig": {
        "ret": "any",
        "args": [
          {
            "name": "values",
            "mask": "any",
            "multi": true
          }
        ]
      }
    },
    {
      "name": "capable",
      "doc": "Test if the given entity has a specific capability.\n\nSupported capabilities:\n\n-`NavTravel`\n\n-`Attack`\n\n-`Status`",
      "sig": {
        "ret": [
          "null",
          "bool"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "capability",
            "mask": "str"
          }
        ]
      }
    },
    {
      "name": "velocity",
      "doc": "Lookup the velocity of the given entity.",
      "sig": {
        "ret": [
          "null",
          "vec3"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "vfx_decal",
      "doc": "Place a decal.\n\n*Note*: Resulting entity is not automatically destroyed.\n\n*Note*: It takes one frame before it can be used with the 'vfx_param()' api.",
      "sig": {
        "ret": "entity",
        "args": [
          {
            "name": "asset",
            "mask": "entity"
          },
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "rot",
            "mask": "quat"
          },
          {
            "name": "alpha",
            "mask": [
              "null",
              "num"
            ]
          }
        ]
      }
    },
    {
      "name": "exists",
      "doc": "Test if the given entity still exists.\n\n*Note*: Returns false if input value is null.",
      "sig": {
        "ret": "bool",
        "args": [
          {
            "name": "v",
            "mask": [
              "null",
              "entity"
            ]
          }
        ]
      }
    },
    {
      "name": "sound_param",
      "doc": "Change or query a sound parameter on the given entity.\n\nSupported parameters:\n\n-`Gain`\n\n-`Pitch`",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "param",
            "mask": "str"
          },
          {
            "name": "value",
            "mask": [
              "null",
              "num"
            ]
          }
        ]
      }
    },
    {
      "name": "rotation",
      "doc": "Lookup the rotation of the given entity.",
      "sig": {
        "ret": [
          "null",
          "quat"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "debug_box",
      "doc": "Draw a 3D debug box.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "size",
            "mask": "vec3"
          },
          {
            "name": "rot",
            "mask": [
              "null",
              "quat"
            ]
          },
          {
            "name": "color",
            "mask": [
              "null",
              "color"
            ]
          }
        ]
      }
    },
    {
      "name": "debug_sphere",
      "doc": "Draw a 3D debug sphere.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "radius",
            "mask": [
              "null",
              "num"
            ]
          },
          {
            "name": "color",
            "mask": [
              "null",
              "color"
            ]
          }
        ]
      }
    },
    {
      "name": "visible",
      "doc": "Check if the given position is visible for this faction.",
      "sig": {
        "ret": "bool",
        "args": [
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "faction",
            "mask": [
              "null",
              "str"
            ]
          }
        ]
      }
    },
    {
      "name": "status",
      "doc": "Change or query if an entity is affected by the specified status.\n\nSupported parameters:\n\n-`Burning`",
      "sig": {
        "ret": [
          "null",
          "bool"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "type",
            "mask": "str"
          },
          {
            "name": "enable",
            "mask": [
              "null",
              "bool"
            ]
          }
        ]
      }
    },
    {
      "name": "sound_play",
      "doc": "Start playing a sound.\n\n*Note*: Resulting entity is not automatically destroyed.\n\n*Note*: It takes one frame before it can be used with the 'sound_param()' api.",
      "sig": {
        "ret": [
          "null",
          "entity"
        ],
        "args": [
          {
            "name": "asset",
            "mask": "entity"
          },
          {
            "name": "pos",
            "mask": [
              "null",
              "vec3"
            ]
          },
          {
            "name": "gain",
            "mask": [
              "null",
              "num"
            ]
          },
          {
            "name": "pitch",
            "mask": [
              "null",
              "num"
            ]
          },
          {
            "name": "looping",
            "mask": [
              "null",
              "bool"
            ]
          }
        ]
      }
    },
    {
      "name": "faction",
      "doc": "Lookup the faction of the given entity.",
      "sig": {
        "ret": [
          "null",
          "str"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "spawn",
      "doc": "Spawn a prefab.",
      "sig": {
        "ret": [
          "null",
          "entity"
        ],
        "args": [
          {
            "name": "prefabId",
            "mask": "str"
          },
          {
            "name": "pos",
            "mask": [
              "null",
              "vec3"
            ]
          },
          {
            "name": "rot",
            "mask": [
              "null",
              "quat"
            ]
          },
          {
            "name": "scale",
            "mask": [
              "null",
              "num"
            ]
          },
          {
            "name": "faction",
            "mask": [
              "null",
              "str"
            ]
          }
        ]
      }
    },
    {
      "name": "emit",
      "doc": "Change or query the emissivity of the given entity.",
      "sig": {
        "ret": [
          "null",
          "bool"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "on",
            "mask": [
              "null",
              "bool"
            ]
          }
        ]
      }
    },
    {
      "name": "attach",
      "doc": "Attach the given entity to another entity (optionally at a specific joint).",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "target",
            "mask": "entity"
          },
          {
            "name": "jointName",
            "mask": [
              "null",
              "str"
            ]
          }
        ]
      }
    },
    {
      "name": "ask",
      "doc": "Ask a target entity for a knowledge value.\n\n*Note*: The result value is visible to this entity under the same key in the next frame.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "this",
            "mask": "entity"
          },
          {
            "name": "target",
            "mask": "entity"
          },
          {
            "name": "key",
            "mask": "str"
          }
        ]
      }
    },
    {
      "name": "light_param",
      "doc": "Change or query a light parameter on the given entity.\n\nSupported parameters:\n\n-`Radiance`",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "param",
            "mask": "str"
          },
          {
            "name": "value",
            "mask": [
              "null",
              "color"
            ]
          }
        ]
      }
    },
    {
      "name": "debug_text",
      "doc": "Draw debug text at a position in 3D space.\n\n*Note*: Size is in UI canvas pixels.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "color",
            "mask": "color"
          },
          {
            "name": "size",
            "mask": "num"
          },
          {
            "name": "values",
            "mask": "any",
            "multi": true
          }
        ]
      }
    },
    {
      "name": "debug_break",
      "doc": "Break into the debugger if there is one attached.",
      "sig": {
        "ret": "null",
        "args": []
      }
    },
    {
      "name": "attack",
      "doc": "Instruct the given entity to attack another entity.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "target",
            "mask": [
              "null",
              "entity"
            ]
          }
        ]
      }
    },
    {
      "name": "teleport",
      "doc": "Teleport the given entity.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "pos",
            "mask": [
              "null",
              "vec3"
            ]
          },
          {
            "name": "rot",
            "mask": [
              "null",
              "quat"
            ]
          }
        ]
      }
    },
    {
      "name": "query_sphere",
      "doc": "Find all the entities that are touching the given sphere.\n\n*Note*: Returns a query handle.\n\nSupported layers:\n\n-`Environment`\n\n-`Destructible`\n\n-`Infantry`\n\n-`Structure`\n\n-`Unit`\n\n-`Debug`\n\n-`AllIncludingDebug`\n\n-`AllNonDebug` (default)",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "pos",
            "mask": "vec3"
          },
          {
            "name": "radius",
            "mask": "num"
          },
          {
            "name": "layers",
            "mask": [
              "null",
              "str"
            ],
            "multi": true
          }
        ]
      }
    },
    {
      "name": "self",
      "doc": "Return the entity that is executing the current script.",
      "sig": {
        "ret": "entity",
        "args": []
      }
    },
    {
      "name": "line_of_sight",
      "doc": "Test if there is a clear line of sight between the given entities.",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "src",
            "mask": "entity"
          },
          {
            "name": "dst",
            "mask": "entity"
          },
          {
            "name": "radius",
            "mask": [
              "null",
              "num"
            ]
          }
        ]
      }
    },
    {
      "name": "bark",
      "doc": "Request a bark to be played.\n\nSupported types:\n\n-`Death`\n\n-`Confirm`",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "type",
            "mask": "str"
          }
        ]
      }
    },
    {
      "name": "detach",
      "doc": "Detach the given entity from all other entities.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "v",
            "mask": "entity"
          }
        ]
      }
    },
    {
      "name": "set",
      "doc": "Change or query if the target entity is contained in the given set.",
      "sig": {
        "ret": [
          "null",
          "bool"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "set",
            "mask": "str"
          },
          {
            "name": "add",
            "mask": [
              "null",
              "bool"
            ]
          }
        ]
      }
    },
    {
      "name": "debug_arrow",
      "doc": "Draw a 3D debug arrow.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "start",
            "mask": "vec3"
          },
          {
            "name": "end",
            "mask": "vec3"
          },
          {
            "name": "radius",
            "mask": [
              "null",
              "num"
            ]
          },
          {
            "name": "color",
            "mask": [
              "null",
              "color"
            ]
          }
        ]
      }
    },
    {
      "name": "vfx_param",
      "doc": "Change or query a vfx parameter on the given entity.\n\nSupported parameters:\n\n-`Alpha`",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "v",
            "mask": "entity"
          },
          {
            "name": "param",
            "mask": "str"
          },
          {
            "name": "value",
            "mask": [
              "null",
              "num"
            ]
          }
        ]
      }
    },
    {
      "name": "time",
      "doc": "Lookup the current time.\n\nSupported clocks:\n\n-`Time` (default)\n\n-`RealTime`\n\n-`Delta`\n\n-`RealDelta`\n\n-`Ticks`",
      "sig": {
        "ret": [
          "null",
          "num"
        ],
        "args": [
          {
            "name": "clock",
            "mask": [
              "null",
              "str"
            ]
          }
        ]
      }
    },
    {
      "name": "tell",
      "doc": "Set a knowledge value for the given entity.\n\n*Note*: The updated knowledge is visible to scripts in the next frame.",
      "sig": {
        "ret": "null",
        "args": [
          {
            "name": "target",
            "mask": "entity"
          },
          {
            "name": "key",
            "mask": "str"
          },
          {
            "name": "value",
            "mask": "any"
          }
        ]
      }
    }
  ]
}